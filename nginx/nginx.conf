#user  nobody;
worker_processes 1;

events {
    worker_connections 1024;
}

error_log stderr debug;

http {
    include /etc/nginx/mime.types;

    server {
        server_name api.how-to-sea.xyz;
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/api.how-to-sea.xyz/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/api.how-to-sea.xyz/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


        root /usr/share/nginx/html;


        try_files $uri /not_found;
        resolver $DNS_ADDRESS ipv6=off valid=30s;

        #Performance configs (for later)
        # gzip on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/css application/javascript application/json application/font-woff application/font-tff image/gif image/png image/svg+xml application/octet-stream;

        location = / {
            return 200 "Connected to HowToSea!";

        }

        location = /test {
            return 200 "<p>This is a test</p>";
        }

        location = /not_found {
            return 404 "sadly, you've hit a brick wall buddy!\n";
        }
        location /location/ {
            #Using a target is needed to use a resolver. Otherwise it skips the resolver.
            set $target http://$LOCATION_HOSTNAME:8000;
            proxy_pass $target;


            rewrite ^/location/(.*)$ /$1 break;

            # Include proxy headers
            proxy_set_header Host $proxy_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location = /servers {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                return 204;
            }

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

            # Include proxy headers
            proxy_set_header Host $proxy_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            if ($request_method = "POST") {
                set $target $LAMBDA_API_URL;
                proxy_pass $target;
            }
            if ($request_method != "POST") {
                return 405;
            }
        }
    }

    server {
        # catch HTTP request and redirect to HTTPS server
        if ($host = api.how-to-sea.xyz) {
            return 301 https://$host$request_uri;
            } # managed by Certbot

            listen 80;
            server_name api.how-to-sea.xyz;
            return 404; # managed by Certbot
        }
    }