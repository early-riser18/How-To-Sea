worker_processes auto;
error_log stderr debug;
events {

}

http {
    include /etc/nginx/mime.types;


    server {

        listen 443 ssl; # managed by Certbot
        ##########################
        #        SSL Setup       #
        ##########################
        ssl_certificate /etc/letsencrypt/live/api.how-to-sea.xyz/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/api.how-to-sea.xyz/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
        ##########################

        resolver $DNS_ADDRESS ipv6=off valid=30s;
        root /usr/share/nginx/html;
        try_files $uri /not_found;

        # Include proxy headers
        proxy_set_header Host $proxy_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        location = / {
            return 200 "Connected to HowToSea!";

        }

        location = /test {
            return 200 "<p>This is a test</p>";
        }

        location = /not_found {
            return 404 "sadly, you've hit a brick wall buddy!\n";
        }
        location /location/ {
            #Using a target is needed to use a resolver. Otherwise it skips the resolver.
            set $target http://$LOCATION_HOSTNAME:8000;
            proxy_pass $target;
            rewrite ^/location/(.*)$ /$1 break;


        }

        location /auth/ {
            set $target http://$AUTH_HOSTNAME:8000;
            proxy_pass $target;
            rewrite ^/auth/(.*)$ /$1 break;
        }

        location = /servers {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                return 204;
            }

            if ($request_method = "POST") {
                set $target $LAMBDA_API_URL;
                proxy_pass $target;
            }
            if ($request_method != "POST") {
                add_header "Allow" "POST" always;
                return 405;
            }
        }
    }


    ##########################
    # HTTP-to-HTTPS redirect #
    ##########################
    server {
        listen 80;
        if ($host = api.how-to-sea.xyz) {
            return 301 https://$host$request_uri;
            } # managed by Certbot

            if ($host = localhost) {
                return 301 https://$host$request_uri;
                } # Local development

                return 404; # managed by Certbot
            }
        }

